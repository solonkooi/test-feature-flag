# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc
from . import FeatureFlagService_pb2 as FeatureFlagService__pb2


class FeatureFlagServiceStub(object):
  """
  The Feature Flag Service provides methods to get station feature flag values

  Authentication
  ^^^^^^^^^^^^^^
  Please provide a valid ``api_key`` parameter in gRPC service metadata for ``SetFeatureFlag`` and ``DeleteFeatureFlag`` method, otherwise the service will return ``Unauthenticated`` response.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetFeatureFlag = channel.unary_unary(
        '/featureflag.services.types.FeatureFlagService/GetFeatureFlag',
        request_serializer=FeatureFlagService__pb2.GetFeatureFlagRequest.SerializeToString,
        response_deserializer=FeatureFlagService__pb2.GetFeatureFlagResponse.FromString,
        )
    self.SetFeatureFlag = channel.unary_unary(
        '/featureflag.services.types.FeatureFlagService/SetFeatureFlag',
        request_serializer=FeatureFlagService__pb2.SetFeatureFlagRequest.SerializeToString,
        response_deserializer=FeatureFlagService__pb2.SetFeatureFlagResponse.FromString,
        )
    self.DeleteFeatureFlag = channel.unary_unary(
        '/featureflag.services.types.FeatureFlagService/DeleteFeatureFlag',
        request_serializer=FeatureFlagService__pb2.DeleteFeatureFlagRequest.SerializeToString,
        response_deserializer=FeatureFlagService__pb2.DeleteFeatureFlagResponse.FromString,
        )
    self.SetFeatureFlagForStations = channel.unary_unary(
        '/featureflag.services.types.FeatureFlagService/SetFeatureFlagForStations',
        request_serializer=FeatureFlagService__pb2.SetFeatureFlagForStationsRequest.SerializeToString,
        response_deserializer=FeatureFlagService__pb2.SetFeatureFlagForStationsResponse.FromString,
        )
    self.IsFeatureFlagEnabledForStations = channel.unary_unary(
        '/featureflag.services.types.FeatureFlagService/IsFeatureFlagEnabledForStations',
        request_serializer=FeatureFlagService__pb2.IsFeatureFlagEnabledForStationsRequest.SerializeToString,
        response_deserializer=FeatureFlagService__pb2.IsFeatureFlagEnabledForStationsResponse.FromString,
        )


class FeatureFlagServiceServicer(object):
  """
  The Feature Flag Service provides methods to get station feature flag values

  Authentication
  ^^^^^^^^^^^^^^
  Please provide a valid ``api_key`` parameter in gRPC service metadata for ``SetFeatureFlag`` and ``DeleteFeatureFlag`` method, otherwise the service will return ``Unauthenticated`` response.
  """

  def GetFeatureFlag(self, request, context):
    """Gets Feature Flag information
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetFeatureFlag(self, request, context):
    """Updates feature flag
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteFeatureFlag(self, request, context):
    """Delete a feature flag for a given application name
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetFeatureFlagForStations(self, request, context):
    """Set feature flag for multiple stations
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def IsFeatureFlagEnabledForStations(self, request, context):
    """Get feature flag value for multiple stations (maximum number of stations is 500)
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_FeatureFlagServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetFeatureFlag': grpc.unary_unary_rpc_method_handler(
          servicer.GetFeatureFlag,
          request_deserializer=FeatureFlagService__pb2.GetFeatureFlagRequest.FromString,
          response_serializer=FeatureFlagService__pb2.GetFeatureFlagResponse.SerializeToString,
      ),
      'SetFeatureFlag': grpc.unary_unary_rpc_method_handler(
          servicer.SetFeatureFlag,
          request_deserializer=FeatureFlagService__pb2.SetFeatureFlagRequest.FromString,
          response_serializer=FeatureFlagService__pb2.SetFeatureFlagResponse.SerializeToString,
      ),
      'DeleteFeatureFlag': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteFeatureFlag,
          request_deserializer=FeatureFlagService__pb2.DeleteFeatureFlagRequest.FromString,
          response_serializer=FeatureFlagService__pb2.DeleteFeatureFlagResponse.SerializeToString,
      ),
      'SetFeatureFlagForStations': grpc.unary_unary_rpc_method_handler(
          servicer.SetFeatureFlagForStations,
          request_deserializer=FeatureFlagService__pb2.SetFeatureFlagForStationsRequest.FromString,
          response_serializer=FeatureFlagService__pb2.SetFeatureFlagForStationsResponse.SerializeToString,
      ),
      'IsFeatureFlagEnabledForStations': grpc.unary_unary_rpc_method_handler(
          servicer.IsFeatureFlagEnabledForStations,
          request_deserializer=FeatureFlagService__pb2.IsFeatureFlagEnabledForStationsRequest.FromString,
          response_serializer=FeatureFlagService__pb2.IsFeatureFlagEnabledForStationsResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'featureflag.services.types.FeatureFlagService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
